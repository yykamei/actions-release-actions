name: actions-release
description: actions-rele
inputs:
  token:
    description: GitHub access token for GitHub CLI
    required: false
    default: ${{ github.token }}
  tag:
    description: The tag for a release.
    required: true
  title:
    description: The title for a release.
    required: true
  apply:
    description: Whether to apply the release.
    type: boolean
runs:
  using: composite
  steps:
    - name: git-push(1)
      shell: bash -euxo pipefail {0}
      run: |
        # Check whether the version is described in the source code.
        grep -F "## [${TAG}]" CHANGELOG.md
        grep -F '## [Unreleased]' CHANGELOG.md && exit 1

        MINOR_TAG="${TAG%.*}"
        MAJOR_TAG="${TAG%%.*}"

        # Extract the latest changelog entries to put them into GitHub release notes.
        hit=0
        while IFS="" read -r line; do
          if [[ "$line" == "## ["*"]("*")"* ]]; then
            hit=$((hit + 1))
            continue
          fi
          if [[ "$hit" == "1" ]]; then
            echo "$line" >> /tmp/notes.txt
          fi
        done < CHANGELOG.md

        gh release list
        cat /tmp/notes.txt

        git tag --force "$MINOR_TAG"

        if [[ "$MAJOR_TAG" != "v0" ]]; then
          git tag --force "$MAJOR_TAG"
        fi

        if [[ '${{ inputs.apply }}' == "true" ]]; then
          gh release create "$TAG" --title '${{ inputs.title }}' --notes-file /tmp/notes.txt
          git push --force --tags
        fi

      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        TAG: ${{ inputs.tag }}
